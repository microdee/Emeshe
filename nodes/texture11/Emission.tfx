
#include "../../../mp.fxh/Materials.fxh"
#include "../../../mp.fxh/MRE.fxh"

Texture2D PrevTex: PREVIOUS;
Texture2D ColorTex: INITIAL;
Texture2DArray Maps;

float2 R:TARGETSIZE;

SamplerState s0 <bool visible=false;string uiname="Sampler";>
{
	Filter=MIN_MAG_MIP_POINT;
	AddressU=WRAP;
	AddressV=WRAP;
	AddressW=WRAP;
};

float4 pEM(float4 PosWVP:SV_POSITION,float2 uv:TEXCOORD0): SV_Target
{

	float4 col = ColorTex.Sample(s0, uv);
	uint matid = GetMatID(s0, uv);

    bool KnowEmission = KnowFeature(matid, MF_LIGHTING_EMISSION);
    if(KnowEmission)
    {
    	bool KnowEmissionMap = KnowFeature(matid, MF_LIGHTING_EMISSION_MAP);
    	float3 emcol = GetFloat3(matid, MF_LIGHTING_EMISSION, MF_LIGHTING_EMISSION_COLOR);
    	emcol *= GetFloat(matid, MF_LIGHTING_EMISSION, MF_LIGHTING_EMISSION_STRENGTH);

    	if(KnowEmissionMap)
    	{
			float2 scnuv = GetUV(s0, uv);
			float slice = GetFloat(matid, MF_LIGHTING_EMISSION_MAP, 0);
			emcol *= Maps.SampleLevel(s0, float3(scnuv, slice), 0).rgb;
    	}
    	col.rgb += emcol;
    }
		
	return col;
}

technique10 Emission{
	pass P0
	{SetPixelShader(CompileShader(ps_4_0,pEM()));}
}